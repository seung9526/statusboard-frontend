name: Frontend CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/statusboard-frontend
  INFRA_REPO: seung9526/statusboard-infra
  INFRA_VALUES_PATH: helm/statusboard/values.yaml
  BRANCH: ${{ github.ref_name }}
  TAG_SHA: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # 1️⃣ 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ 의존성 설치
      - name: Install dependencies
        run: npm install

      # 4️⃣ FE 빌드
      - name: Build FE
        run: npm run build

      # 5️⃣ 안전한 브랜치명 생성
      - name: Prepare safe branch name
        run: |
          SAFE_BRANCH=${BRANCH//\//-}  # '/'를 '-'로 변환
          echo "SAFE_BRANCH=$SAFE_BRANCH" >> $GITHUB_ENV

      # 6️⃣ Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.SAFE_BRANCH }}-latest .

      # 7️⃣ Trivy 설치
      - name: Setup Trivy
        uses: aquasecurity/setup-trivy@v0.2.1

      # 8️⃣ Trivy 스캔
      - name: Scan Docker image with Trivy
        run: |
          trivy image --severity CRITICAL --exit-code 1 --ignore-unfixed --format table ${{ env.IMAGE_NAME }}:${{ env.SAFE_BRANCH }}-latest

      # 9️⃣ GHCR 로그인
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 🔟 Docker 이미지 푸시
      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.SAFE_BRANCH }}-latest

      # 1️⃣1️⃣ infra 레포 체크아웃
      - name: Checkout infra repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.INFRA_REPO }}
          token: ${{ secrets.INFRA_REPO_TOKEN }}
          path: infra-repo
          ref: main
          fetch-depth: 0

      # 1️⃣2️⃣ values.yaml 업데이트
      - name: Update frontend image tag in infra values
        working-directory: infra-repo
        run: |
          echo "Updating frontend.image.tag to ${SAFE_BRANCH}-latest (sha: ${TAG_SHA:0:7})"
          if command -v yq >/dev/null 2>&1; then
            yq -i '.frontend.image.tag = strenv(SAFE_BRANCH) + "-latest"' $INFRA_VALUES_PATH
          else
            sed -i 's#^\(\s*frontend:\s*tag:\s*\).*$#\1'${SAFE_BRANCH}'-latest#' $INFRA_VALUES_PATH
          fi
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -b chore/update-frontend-image-${SAFE_BRANCH}-$(echo $TAG_SHA | cut -c1-7)
          git add $INFRA_VALUES_PATH
          git commit -m "chore: update frontend image tag to ${SAFE_BRANCH}-latest (from ${GITHUB_REPOSITORY}@${TAG_SHA})" || echo "No changes"

      # 1️⃣3️⃣ infra 레포에 PR 생성 후 브랜치 자동 삭제
      - name: Create PR to infra
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.INFRA_REPO_TOKEN }}
          path: infra-repo
          branch: chore/update-frontend-image-${{ env.SAFE_BRANCH }}-${{ env.TAG_SHA }}
          title: "chore(infra): FE image -> ${{ env.SAFE_BRANCH }}-latest"
          commit-message: "chore: FE image tag -> ${{ env.SAFE_BRANCH }}-latest"
          base: main
          body: |
            Frontend Docker image updated by CI/CD.
            - Repo: ${{ github.repository }}
            - Commit: ${{ env.TAG_SHA }}
            - Tag: ${{ env.SAFE_BRANCH }}-latest
          labels: ci, frontend
          delete-branch: true
